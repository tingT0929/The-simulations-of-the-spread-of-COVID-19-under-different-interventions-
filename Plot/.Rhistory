path <- "D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/"
source(paste0(path, "Code_data/Epidemic_modeling.R"))
load(paste0(path, "Code_data/Para_Shenzhen.rda"))
shenzhen = para
load(paste0(path, "Code_data/Para_Wenzhou.rda"))
wenzhou = para
load(paste0(path, "Code_data/Para_Wuhan.rda"))
wuhan = para
region_mark = 6
load(paste0(path, "Code_data/All_dat.RDATA"))
dat <- all_list[[region_mark]]$Data
N <- all_list[[region_mark]]$Population
region <- all_list[[region_mark]]$Region
N
region
dat
## Initial
init <- c(N, 0, dat[1,3], dat[1,4])
## Initial
init <- c(N, 0, dat[1,3], dat[1,4])
Dynamic_p <- function(time_length, para, alp, init, N, I_init, city){
if(city == 'wuhan') {
alp[2] = rowMeans(sapply(1:length(wuhan), function(k){wuhan[[k]][[2]]}))[2]
} else if(city == 'wenzhou') {
alp[2] = rowMeans(sapply(1:length(wenzhou), function(k){wenzhou[[k]][[2]]}))[2]
} else if(city == 'shenzhen') {
alp[2] = rowMeans(sapply(1:length(shenzhen), function(k){shenzhen[[k]][[2]]}))[2]
}
alp[3] = 1
comp_num <- matrix(init, nrow = 1)
comp_num[2] <- I_init
comp_num[1] <- N - sum(comp_num[-1])
for(i in 2:time_length){
para[1] <- f_alp(i-1, alp)
comp_num <- rbind(comp_num,
as.numeric(ode(y = comp_num[i-1,],
times = (i-1):(i),
eqn,
parms = para,
N = N,
atol = 1)[2,-1]))
}
return(comp_num)
}
pred <- function(k, time_length, para, init, N, city){
comp_num <- Dynamic_p(time_length, para[[k]][[1]], para[[k]][[2]], init, N, para[[k]][[4]], city)
colnames(comp_num) <- c("S", "I", "H", "R")
return(comp_num)
}
####---------- running
load(paste0(path, 'Code_data/Para_', region, ".rda"))
list_sta <- list()
list_end <- list()
for(city in c('wuhan', 'wenzhou', 'shenzhen')) {
list_sta[[city]] <- lapply(1:length(para), pred, para = para, time_length= 150, init = init, N = N, city=city)
pred_array <- array(0, c(length(para), time_length= 150, 4))
for(i in 1:length(para)){
pred_array[i,,] <- list_sta[[city]][[i]]
}
list_end[[city]] <- list()
list_end[[city]][['I']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,2], c(0.025, 0.5, 0.975))})
list_end[[city]][['H']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,3], c(0.025, 0.5, 0.975))})
list_end[[city]][['R']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,4], c(0.025, 0.5, 0.975))})
}
paste0(path, 'plot/', region, "_mi.rda")
save(list_end, file = paste0(path, 'plot/', region, "_mi.rda"), version = 2)
# path = '/Users/zhangjingwen/Desktop/冠状病毒/统计分析/The-simulations_1128_v2/'
path <- "D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/"
source(paste0(path, "Code_data/Epidemic_modeling.R"))
load(paste0(path, "Code_data/Para_Shenzhen.rda"))
shenzhen = para
load(paste0(path, "Code_data/Para_Wenzhou.rda"))
wenzhou = para
load(paste0(path, "Code_data/Para_Wuhan.rda"))
wuhan = para
region_mark = 5
load(paste0(path, "Code_data/All_dat.RDATA"))
dat <- all_list[[region_mark]]$Data
N <- all_list[[region_mark]]$Population
region <- all_list[[region_mark]]$Region
## Initial
init <- c(N, 0, dat[1,3], dat[1,4])
Dynamic_p <- function(time_length, para, alp, init, N, I_init, city){
if(city == 'wuhan') {
alp[2] = rowMeans(sapply(1:length(wuhan), function(k){wuhan[[k]][[2]]}))[2]
} else if(city == 'wenzhou') {
alp[2] = rowMeans(sapply(1:length(wenzhou), function(k){wenzhou[[k]][[2]]}))[2]
} else if(city == 'shenzhen') {
alp[2] = rowMeans(sapply(1:length(shenzhen), function(k){shenzhen[[k]][[2]]}))[2]
}
alp[3] = 1
comp_num <- matrix(init, nrow = 1)
comp_num[2] <- I_init
comp_num[1] <- N - sum(comp_num[-1])
for(i in 2:time_length){
para[1] <- f_alp(i-1, alp)
comp_num <- rbind(comp_num,
as.numeric(ode(y = comp_num[i-1,],
times = (i-1):(i),
eqn,
parms = para,
N = N,
atol = 1)[2,-1]))
}
return(comp_num)
}
pred <- function(k, time_length, para, init, N, city){
comp_num <- Dynamic_p(time_length, para[[k]][[1]], para[[k]][[2]], init, N, para[[k]][[4]], city)
colnames(comp_num) <- c("S", "I", "H", "R")
return(comp_num)
}
####---------- running
load(paste0(path, 'Code_data/Para_', region, ".rda"))
list_sta <- list()
list_end <- list()
for(city in c('wuhan', 'wenzhou', 'shenzhen')) {
list_sta[[city]] <- lapply(1:length(para), pred, para = para, time_length = 150, init = init, N = N, city = city)
pred_array <- array(0, c(length(para), time_length = 150, 4))
for(i in 1:length(para)){
pred_array[i,,] <- list_sta[[city]][[i]]
}
list_end[[city]] <- list()
list_end[[city]][['I']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,2], c(0.025, 0.5, 0.975))})
list_end[[city]][['H']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,3], c(0.025, 0.5, 0.975))})
list_end[[city]][['R']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,4], c(0.025, 0.5, 0.975))})
}
# path = '/Users/zhangjingwen/Desktop/冠状病毒/统计分析/The-simulations_1128_v2/'
path <- "D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/"
source(paste0(path, "Code_data/Epidemic_modeling.R"))
load(paste0(path, "Code_data/Para_Shenzhen.rda"))
shenzhen = para
load(paste0(path, "Code_data/Para_Wenzhou.rda"))
wenzhou = para
load(paste0(path, "Code_data/Para_Wuhan.rda"))
wuhan = para
region_mark = 5
load(paste0(path, "Code_data/All_dat.RDATA"))
dat <- all_list[[region_mark]]$Data
N <- all_list[[region_mark]]$Population
region <- all_list[[region_mark]]$Region
## Initial
init <- c(N, 0, dat[1,3], dat[1,4])
Dynamic_p <- function(time_length, para, alp, init, N, I_init, city){
if(city == 'wuhan') {
alp[2] = rowMeans(sapply(1:length(wuhan), function(k){wuhan[[k]][[2]]}))[2]
} else if(city == 'wenzhou') {
alp[2] = rowMeans(sapply(1:length(wenzhou), function(k){wenzhou[[k]][[2]]}))[2]
} else if(city == 'shenzhen') {
alp[2] = rowMeans(sapply(1:length(shenzhen), function(k){shenzhen[[k]][[2]]}))[2]
}
alp[3] = 1
comp_num <- matrix(init, nrow = 1)
comp_num[2] <- I_init
comp_num[1] <- N - sum(comp_num[-1])
for(i in 2:time_length){
para[1] <- f_alp(i-1, alp)
comp_num <- rbind(comp_num,
as.numeric(ode(y = comp_num[i-1,],
times = (i-1):(i),
eqn,
parms = para,
N = N,
atol = 1)[2,-1]))
}
return(comp_num)
}
pred <- function(k, time_length, para, init, N, city){
comp_num <- Dynamic_p(time_length, para[[k]][[1]], para[[k]][[2]], init, N, para[[k]][[4]], city)
colnames(comp_num) <- c("S", "I", "H", "R")
return(comp_num)
}
####---------- running
load(paste0(path, 'Code_data/Para_', region, ".rda"))
list_sta <- list()
list_end <- list()
for(city in c('wuhan', 'wenzhou', 'shenzhen')) {
list_sta[[city]] <- lapply(1:length(para), pred, para = para, time_length = 150, init = init, N = N, city = city)
pred_array <- array(0, c(length(para), time_length = 150, 4))
for(i in 1:length(para)){
pred_array[i,,] <- list_sta[[city]][[i]]
}
list_end[[city]] <- list()
list_end[[city]][['I']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,2], c(0.025, 0.5, 0.975))})
list_end[[city]][['H']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,3], c(0.025, 0.5, 0.975))})
list_end[[city]][['R']] <- sapply(1:150, function(j)
{quantile(pred_array[,j,4], c(0.025, 0.5, 0.975))})
}
save(list_end, file = paste0(path, 'plot/', region, "_mi.rda"), version = 2)
# setwd("D:/SC2S2/pneumonia/paper/code/1129/")
setwb("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Plot/")
# setwd("D:/SC2S2/pneumonia/paper/code/1129/")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Plot/")
scientific_10 <- function(x) {
parse(text=gsub("e", " %*% 10^", scales::scientific_format()(x)))
}
## plot
Plot_ALL.2 <- function(result.wh, result.wz,result.sz, dat_real, start_date, end_date, area) {
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
date_num <- as.numeric(end_date - start_date + 1)
# dat_real <- c(c(dat[,3] + dat[,4] + dat[,5]), rep(NA, (date_num-dim(dat)[1])))
# dat_real <- c(c(dat[,3]), rep(NA, (date_num-dim(dat)[1])))
dat_real <- c(dat_real, rep(NA, date_num - length(dat_real)))
dat_I <- rbind(t(result.wh$I)[1:date_num, ],  t(result.wz$I)[1:date_num, ], t(result.sz$I)[1:date_num, ])
dat_H <- rbind(t(result.wh$H)[1:date_num, ],  t(result.wz$H)[1:date_num, ], t(result.sz$H)[1:date_num, ])
dat_R <- rbind(t(result.wh$R)[1:date_num, ],  t(result.wz$R)[1:date_num, ], t(result.sz$R)[1:date_num, ])
dat_H <- dat_H + dat_R
date_len <- date_num
time_lab <- rep(format(seq.Date(from = start_date, by = "day", length.out = date_len ), format = "%m/%d"), 3)
class.bl <- as.factor(c(rep(1, date_num), rep(2, date_num), rep(3, date_num)))
dat_plot <- data.frame(time_num = 1:date_len, dat_real, dat_I, dat_H, dat_R, class.bl,
time_lab, stringsAsFactors = FALSE)
names(dat_plot) <- c("time_num", "real_num",
"I_ci_l", "I_pred", "I_ci_h",
"H_ci_l", "H_pred", "H_ci_h",
"R_ci_l", "R_pred", "R_ci_h",
"class", "time_lab")
plot_title <- paste0("The Simulation of COVID-19 trend after ", area , " adopted three measures")
na_vec_H1 <- na_vec_H2 <-
now.time1 <- now.time2 <- rep(NA, date_len * 3)
na_vec_H1[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
round(dat_plot$H_pred[c(which.max(dat_plot$H_pred[c(1:date_len)]),date_len+ which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))])
na_vec_H2[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
paste0(time_lab[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))], ":")
to_string <- as_labeller(c(`1` =  "Policy Pattern of Wuhan", `2` =  "Policy Pattern of Wenzhou",
`3` =  "Policy Pattern of Shenzhen"))
plot_out <- dat_plot %>%
ggplot(aes(x = time_num)) +
# geom_line(aes(y = I_pred, color = "Infected and infectious without quarantine"), size = 1) +
geom_line(aes(y = I_pred, color = "#0072B2"), size = 1) +
# geom_line(aes(y = H_pred, color = "Hospitalization in quarantine"), size = 1) +
# geom_line(aes(y = H_pred, color = "Cumulative confirmed cases"), size = 1) +
geom_line(aes(y = H_pred, color = "red"), size = 1) +
facet_wrap(vars(class), nrow = 1,shrink = F, labeller = to_string) +
# geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "Infected and infectious without quarantine", fill = "Infected and infectious without quarantine"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "#0072B2", fill = "#0072B2"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "Cumulative confirmed cases ", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "red ", fill = "red"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = all_ci_l, ymax = all_ci_h, color = "Cumulative confirmed cases", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3)+
geom_point(aes(y = real_num, shape =  "Actual cumulative confirmed cases"), size = 2, color = "purple")
if(area == "South Korea") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 10 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 10 == 1])
} else if(area == "Italy") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
} else {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
}
plot_out <- plot_out +
# scale_color_manual(values = c("green", "red", "#0072B2")) +
# scale_fill_manual(values = c("green", "red", "#0072B2")) +
# scale_color_manual(values = c("red", "#0072B2")) +
# scale_fill_manual(values = c("red", "#0072B2")) +
scale_y_continuous(labels = scientific_10) +
theme_bw(base_family = "Times") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
panel.border = element_blank(),
text = element_text(family = "STHeiti"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30)) +
labs(x = "Date", y = "Number of Individuals",
title = "",
colour = "", shape = "", fill = "")
return(plot_out)
}
end_date <- "2020-05-31"
start_date <- "2020-03-15"
library(ggplot2)
library(tidyverse)
load("All_dat.rdata")
# setwd("D:/SC2S2/pneumonia/paper/code/1129/")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Code_data/")
scientific_10 <- function(x) {
parse(text=gsub("e", " %*% 10^", scales::scientific_format()(x)))
}
## plot
Plot_ALL.2 <- function(result.wh, result.wz,result.sz, dat_real, start_date, end_date, area) {
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
date_num <- as.numeric(end_date - start_date + 1)
# dat_real <- c(c(dat[,3] + dat[,4] + dat[,5]), rep(NA, (date_num-dim(dat)[1])))
# dat_real <- c(c(dat[,3]), rep(NA, (date_num-dim(dat)[1])))
dat_real <- c(dat_real, rep(NA, date_num - length(dat_real)))
dat_I <- rbind(t(result.wh$I)[1:date_num, ],  t(result.wz$I)[1:date_num, ], t(result.sz$I)[1:date_num, ])
dat_H <- rbind(t(result.wh$H)[1:date_num, ],  t(result.wz$H)[1:date_num, ], t(result.sz$H)[1:date_num, ])
dat_R <- rbind(t(result.wh$R)[1:date_num, ],  t(result.wz$R)[1:date_num, ], t(result.sz$R)[1:date_num, ])
dat_H <- dat_H + dat_R
date_len <- date_num
time_lab <- rep(format(seq.Date(from = start_date, by = "day", length.out = date_len ), format = "%m/%d"), 3)
class.bl <- as.factor(c(rep(1, date_num), rep(2, date_num), rep(3, date_num)))
dat_plot <- data.frame(time_num = 1:date_len, dat_real, dat_I, dat_H, dat_R, class.bl,
time_lab, stringsAsFactors = FALSE)
names(dat_plot) <- c("time_num", "real_num",
"I_ci_l", "I_pred", "I_ci_h",
"H_ci_l", "H_pred", "H_ci_h",
"R_ci_l", "R_pred", "R_ci_h",
"class", "time_lab")
plot_title <- paste0("The Simulation of COVID-19 trend after ", area , " adopted three measures")
na_vec_H1 <- na_vec_H2 <-
now.time1 <- now.time2 <- rep(NA, date_len * 3)
na_vec_H1[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
round(dat_plot$H_pred[c(which.max(dat_plot$H_pred[c(1:date_len)]),date_len+ which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))])
na_vec_H2[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
paste0(time_lab[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))], ":")
to_string <- as_labeller(c(`1` =  "Policy Pattern of Wuhan", `2` =  "Policy Pattern of Wenzhou",
`3` =  "Policy Pattern of Shenzhen"))
plot_out <- dat_plot %>%
ggplot(aes(x = time_num)) +
# geom_line(aes(y = I_pred, color = "Infected and infectious without quarantine"), size = 1) +
geom_line(aes(y = I_pred, color = "#0072B2"), size = 1) +
# geom_line(aes(y = H_pred, color = "Hospitalization in quarantine"), size = 1) +
# geom_line(aes(y = H_pred, color = "Cumulative confirmed cases"), size = 1) +
geom_line(aes(y = H_pred, color = "red"), size = 1) +
facet_wrap(vars(class), nrow = 1,shrink = F, labeller = to_string) +
# geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "Infected and infectious without quarantine", fill = "Infected and infectious without quarantine"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "#0072B2", fill = "#0072B2"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "Cumulative confirmed cases ", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "red ", fill = "red"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = all_ci_l, ymax = all_ci_h, color = "Cumulative confirmed cases", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3)+
geom_point(aes(y = real_num, shape =  "Actual cumulative confirmed cases"), size = 2, color = "purple")
if(area == "South Korea") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 10 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 10 == 1])
} else if(area == "Italy") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
} else {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
}
plot_out <- plot_out +
# scale_color_manual(values = c("green", "red", "#0072B2")) +
# scale_fill_manual(values = c("green", "red", "#0072B2")) +
# scale_color_manual(values = c("red", "#0072B2")) +
# scale_fill_manual(values = c("red", "#0072B2")) +
scale_y_continuous(labels = scientific_10) +
theme_bw(base_family = "Times") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
panel.border = element_blank(),
text = element_text(family = "STHeiti"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30)) +
labs(x = "Date", y = "Number of Individuals",
title = "",
colour = "", shape = "", fill = "")
return(plot_out)
}
end_date <- "2020-05-31"
start_date <- "2020-03-15"
library(ggplot2)
library(tidyverse)
load("All_dat.rdata")
install.packages("tidyverse")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Plot/")
library(tidyverse)
load("All_dat.rdata")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Plot/")
# setwd("D:/SC2S2/pneumonia/paper/code/1129/")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Code_data/")
scientific_10 <- function(x) {
parse(text=gsub("e", " %*% 10^", scales::scientific_format()(x)))
}
## plot
Plot_ALL.2 <- function(result.wh, result.wz,result.sz, dat_real, start_date, end_date, area) {
start_date <- as.Date(start_date)
end_date <- as.Date(end_date)
date_num <- as.numeric(end_date - start_date + 1)
# dat_real <- c(c(dat[,3] + dat[,4] + dat[,5]), rep(NA, (date_num-dim(dat)[1])))
# dat_real <- c(c(dat[,3]), rep(NA, (date_num-dim(dat)[1])))
dat_real <- c(dat_real, rep(NA, date_num - length(dat_real)))
dat_I <- rbind(t(result.wh$I)[1:date_num, ],  t(result.wz$I)[1:date_num, ], t(result.sz$I)[1:date_num, ])
dat_H <- rbind(t(result.wh$H)[1:date_num, ],  t(result.wz$H)[1:date_num, ], t(result.sz$H)[1:date_num, ])
dat_R <- rbind(t(result.wh$R)[1:date_num, ],  t(result.wz$R)[1:date_num, ], t(result.sz$R)[1:date_num, ])
dat_H <- dat_H + dat_R
date_len <- date_num
time_lab <- rep(format(seq.Date(from = start_date, by = "day", length.out = date_len ), format = "%m/%d"), 3)
class.bl <- as.factor(c(rep(1, date_num), rep(2, date_num), rep(3, date_num)))
dat_plot <- data.frame(time_num = 1:date_len, dat_real, dat_I, dat_H, dat_R, class.bl,
time_lab, stringsAsFactors = FALSE)
names(dat_plot) <- c("time_num", "real_num",
"I_ci_l", "I_pred", "I_ci_h",
"H_ci_l", "H_pred", "H_ci_h",
"R_ci_l", "R_pred", "R_ci_h",
"class", "time_lab")
plot_title <- paste0("The Simulation of COVID-19 trend after ", area , " adopted three measures")
na_vec_H1 <- na_vec_H2 <-
now.time1 <- now.time2 <- rep(NA, date_len * 3)
na_vec_H1[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
round(dat_plot$H_pred[c(which.max(dat_plot$H_pred[c(1:date_len)]),date_len+ which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))])
na_vec_H2[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))] <-
paste0(time_lab[c(which.max(dat_plot$H_pred[c(1:date_len)]), date_len+which.max(dat_plot$H_pred[date_len +c(1:date_len)]),
date_len*2+which.max(dat_plot$H_pred[date_len*2 +c(1:date_len)]))], ":")
to_string <- as_labeller(c(`1` =  "Policy Pattern of Wuhan", `2` =  "Policy Pattern of Wenzhou",
`3` =  "Policy Pattern of Shenzhen"))
plot_out <- dat_plot %>%
ggplot(aes(x = time_num)) +
# geom_line(aes(y = I_pred, color = "Infected and infectious without quarantine"), size = 1) +
geom_line(aes(y = I_pred, color = "#0072B2"), size = 1) +
# geom_line(aes(y = H_pred, color = "Hospitalization in quarantine"), size = 1) +
# geom_line(aes(y = H_pred, color = "Cumulative confirmed cases"), size = 1) +
geom_line(aes(y = H_pred, color = "red"), size = 1) +
facet_wrap(vars(class), nrow = 1,shrink = F, labeller = to_string) +
# geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "Infected and infectious without quarantine", fill = "Infected and infectious without quarantine"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = I_ci_l, ymax = I_ci_h, color = "#0072B2", fill = "#0072B2"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "Cumulative confirmed cases ", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3) +
geom_ribbon(aes(ymin = H_ci_l, ymax = H_ci_h, color = "red ", fill = "red"), alpha = 0.1, linetype = 3) +
# geom_ribbon(aes(ymin = all_ci_l, ymax = all_ci_h, color = "Cumulative confirmed cases", fill = "Cumulative confirmed cases"), alpha = 0.1, linetype = 3)+
geom_point(aes(y = real_num, shape =  "Actual cumulative confirmed cases"), size = 2, color = "purple")
if(area == "South Korea") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 10 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 10 == 1])
} else if(area == "Italy") {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
} else {
plot_out <- plot_out +
geom_text(aes(y = na_vec_H1, label = na_vec_H1), hjust = -1, vjust = 1.5,size = 4) + # 1
geom_text(aes(y = na_vec_H1, label = na_vec_H2), hjust = -0, vjust = 1.5,size = 4) + # 2
scale_x_continuous(breaks = dat_plot$time_num[1:(length(dat_plot$time_num)/3) %% 5 == 1],
labels = dat_plot$time_lab[1:(length(dat_plot$time_num)/3) %% 5 == 1])
}
plot_out <- plot_out +
# scale_color_manual(values = c("green", "red", "#0072B2")) +
# scale_fill_manual(values = c("green", "red", "#0072B2")) +
# scale_color_manual(values = c("red", "#0072B2")) +
# scale_fill_manual(values = c("red", "#0072B2")) +
scale_y_continuous(labels = scientific_10) +
theme_bw(base_family = "Times") +
theme(panel.grid.minor = element_blank(),
legend.position = "none",
panel.border = element_blank(),
text = element_text(family = "STHeiti"),
plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 30)) +
labs(x = "Date", y = "Number of Individuals",
title = "",
colour = "", shape = "", fill = "")
return(plot_out)
}
end_date <- "2020-05-31"
start_date <- "2020-03-15"
library(ggplot2)
library(tidyverse)
load("All_dat.rdata")
setwd("D:/Documents/GitHub/The-simulations-of-the-spread-of-COVID-19-under-different-interventions-/Plot/")
# Korea
load("Korea_mi.rda")
# Italy
load("Italy_mi.rda")
dat_real <- all_list$Italy$Data[, "H"] + all_list$Italy$Data[, "R"]
pre_Italy <- Plot_ALL.2(list_end[[1]], list_end[[2]], list_end[[3]], dat_real, start_date, end_date, area = "Italy")
ggsave(pre_Italy, filename = "pre_Italy.png", width = 11, height = 4, dpi = 300)
pre_Italy
# USA
load("America_mi.rda")
dat_real <- all_list$America$Data[, "H"] + all_list$America$Data[, "R"]
pre_America <- Plot_ALL.2(list_end[[1]], list_end[[2]], list_end[[3]], dat_real, start_date, end_date, area = "the United States")
ggsave(pre_America, filename = "pre_America.png", width = 11, height = 4, dpi = 300)
pre_America
# Korea
load("Korea_mi.rda")
dat_real <- all_list$Korea$Data[, "H"] + all_list$Korea$Data[, "R"]
pre_Korea <- Plot_ALL.2(list_end[[1]], list_end[[2]], list_end[[3]], dat_real, start_date, end_date, area = "South Korea")
ggsave(pre_Korea, filename = "pre_Korea.png", width = 11, height = 4, dpi = 300)
pre_Korea
